name: Test Suite e2e

on:
  workflow_dispatch: {}
  push:
    branches: [main, 'sdk-*']
    paths:
      - .github/workflows/test-suite.yml
      - apps/bare-expo/**
      - apps/test-suite/**
      - packages/**
      - yarn.lock
  pull_request:
    paths:
      - .github/workflows/test-suite.yml
      - apps/bare-expo/**
      - apps/test-suite/**
      - packages/**
      - yarn.lock
      # Ignore Expo CLI for now...
      - '!packages/@expo/cli/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ios-test-e2e:
    runs-on: macos-15
    steps:
      - name: 👀 Checkout
        uses: actions/checkout@v5
        with:
          submodules: true
      - name: 🏗️ Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          # Version `1.x` fails due to https://github.com/oven-sh/setup-bun/issues/37
          # TODO(cedric): swap `latest` back once the issue is resolved
          bun-version: latest
      - name: 🔨 Switch to Xcode 26.0
        run: sudo xcode-select --switch /Applications/Xcode_26.0.app
      - name: ➕ Add `bin` to GITHUB_PATH
        run: echo "$(pwd)/bin" >> $GITHUB_PATH
      - name: 🌠 Download builds
        uses: actions/download-artifact@v4
        with:
          name: bare-expo-ios-builds
          path: apps/bare-expo/ios/build/BareExpo.app
          run-id: 18043289020
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: 🧹 Cleanup unused simulator runtimes
        run: |
          xcrun simctl list devices -j | jq -r '.devices | to_entries[] | select(.key | contains("iOS") | not) | .value[].udid' | xargs -r -n1 xcrun simctl delete
          xcrun simctl list devices --json
          xcrun simctl erase all
          xcrun simctl shutdown all
          sudo xcodebuild -runFirstLaunch
      - name: 🍺 Install Maestro
        run: |
          curl -Ls "https://get.maestro.mobile.dev" | bash
          echo "${HOME}/.maestro/bin" >> $GITHUB_PATH
      - name: ♻️ Restore caches
        uses: ./.github/actions/expo-caches
        id: expo-caches
        with:
          yarn-workspace: 'true'
      - name: 🧶 Install node modules in root dir
        if: steps.expo-caches.outputs.yarn-workspace-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: 🖼️ Start image comparison server
        run: |
          mkdir -p ~/.maestro/tests
          bun run image-comparison-server.ts > ~/.maestro/tests/screenshot-server-logs 2>&1 &
          echo $! > /tmp/image-server.pid
        working-directory: apps/bare-expo/e2e/_nested-flows
      - name: 🧪 Run e2e tests (bare-expo)
        run: ./scripts/start-ios-e2e-test.ts --test
        working-directory: apps/bare-expo
        timeout-minutes: 40
      - name: 📸 Store testing artifacts
        if: always()
        uses: actions/upload-artifact@v4
        id: upload-artifacts
        with:
          name: bare-expo-artifacts-ios
          path: |
            ~/.maestro/tests/**/*
          overwrite: true
      - name: 🔗 Artifacts download URL
        if: always()
        run: |
          echo "Artifacts URL: ${{ steps.upload-artifacts.outputs.artifact-url }}"
      - name: 🔔 Notify on Slack
        uses: ./.github/actions/slack-notify
        if: failure() && (github.event.ref == 'refs/heads/main' || startsWith(github.event.ref, 'refs/heads/sdk-'))
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.slack_webhook_ios }}
        with:
          channel: '#expo-ios'
          job_name: 'Test Suite e2e (iOS)'
          artifact_url: ${{ steps.upload-artifacts.outputs.artifact-url }}
      - name: 🛑 Stop image comparison server
        if: always()
        run: |
          if [ -f /tmp/image-server.pid ]; then
            kill $(cat /tmp/image-server.pid) 2>/dev/null || true
            rm -f /tmp/image-server.pid
          fi

  android-test-e2e:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        api-level: [36]
    steps:
      - name: 👀 Checkout
        uses: actions/checkout@v5
      - name: 🏗️ Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          # Version `1.x` fails due to https://github.com/oven-sh/setup-bun/issues/37
          # TODO(cedric): swap `latest` back once the issue is resolved
          bun-version: latest
      - name: 🌠 Download builds
        uses: actions/download-artifact@v4
        with:
          name: bare-expo-android-builds
          path: apps/bare-expo/android/app/build/outputs/apk
          run-id: 18043289020
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: 🍺 Install Maestro
        run: |
          curl -Ls "https://get.maestro.mobile.dev" | bash
          echo "${HOME}/.maestro/bin" >> $GITHUB_PATH
      - name: ♻️ Restore caches
        uses: ./.github/actions/expo-caches
        id: expo-caches
        with:
          yarn-workspace: 'true'
      - name: 🧶 Install node modules in root dir
        if: steps.expo-caches.outputs.yarn-workspace-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: 🧪 Run e2e tests (bare-expo)
        uses: ./.github/actions/use-android-emulator
        with:
          avd-api: ${{ matrix.api-level }}
          avd-name: avd-${{ matrix.api-level }}
          script: |
            # Start image comparison server (needs adb)
            mkdir -p ~/.maestro/tests
            ./e2e/_nested-flows/image-comparison-server.ts > ~/.maestro/tests/screenshot-server-logs 2>&1 &
            echo $! > /tmp/image-server.pid
            # Run the actual tests
            ./scripts/start-android-e2e-test.ts --test
          working-directory: ./apps/bare-expo
      - name: 📸 Store testing artifacts
        if: always()
        id: upload-artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bare-expo-artifacts-android
          path: |
            ~/.maestro/tests/**/*
          overwrite: true
      - name: 🔗 Artifacts download URL
        if: always()
        run: |
          echo "Artifacts URL: ${{ steps.upload-artifacts.outputs.artifact-url }}"
      - name: 🔔 Notify on Slack
        uses: ./.github/actions/slack-notify
        if: failure() && (github.event.ref == 'refs/heads/main' || startsWith(github.event.ref, 'refs/heads/sdk-'))
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.slack_webhook_android }}
        with:
          channel: '#expo-android'
          job_name: 'Test Suite e2e (Android)'
          artifact_url: ${{ steps.upload-artifacts.outputs.artifact-url }}
      - name: 🛑 Stop image comparison server
        if: always()
        run: |
          if [ -f /tmp/image-server.pid ]; then
            kill $(cat /tmp/image-server.pid) 2>/dev/null || true
            rm -f /tmp/image-server.pid
          fi
